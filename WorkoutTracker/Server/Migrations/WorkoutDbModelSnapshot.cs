// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkoutTracker.Server.DataAcessLayer;

#nullable disable

namespace WorkoutTracker.Server.Migrations
{
    [DbContext(typeof(WorkoutDb))]
    partial class WorkoutDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorkoutTracker.Shared.Models.Excercise", b =>
                {
                    b.Property<int>("ExcerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExcerciseId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExcerciseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkoutPlanDetailsWPDetailsId")
                        .HasColumnType("int");

                    b.HasKey("ExcerciseId");

                    b.HasIndex("WorkoutPlanDetailsWPDetailsId");

                    b.ToTable("Excercises");
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Models.WorkoutPlan", b =>
                {
                    b.Property<int>("WorkoutPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkoutPlanId"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WorkoutPlanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkoutPlanId");

                    b.HasIndex("UserId");

                    b.ToTable("WorkoutPlans");
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Models.WorkoutPlanDetails", b =>
                {
                    b.Property<int>("WPDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WPDetailsId"));

                    b.Property<int>("ExcerciseId")
                        .HasColumnType("int");

                    b.Property<string>("Reps")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sets")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkoutPlanId")
                        .HasColumnType("int");

                    b.HasKey("WPDetailsId");

                    b.HasIndex("WorkoutPlanId");

                    b.ToTable("WorkoutPlanDetails");
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Models.Excercise", b =>
                {
                    b.HasOne("WorkoutTracker.Shared.Models.WorkoutPlanDetails", null)
                        .WithMany("Excercises")
                        .HasForeignKey("WorkoutPlanDetailsWPDetailsId");
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Models.WorkoutPlan", b =>
                {
                    b.HasOne("WorkoutTracker.Shared.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Models.WorkoutPlanDetails", b =>
                {
                    b.HasOne("WorkoutTracker.Shared.Models.WorkoutPlan", "WorkoutPlan")
                        .WithMany()
                        .HasForeignKey("WorkoutPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutPlan");
                });

            modelBuilder.Entity("WorkoutTracker.Shared.Models.WorkoutPlanDetails", b =>
                {
                    b.Navigation("Excercises");
                });
#pragma warning restore 612, 618
        }
    }
}
